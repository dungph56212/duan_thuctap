<?php
// check_spelling_errors.php - Ki·ªÉm tra l·ªói ch√≠nh t·∫£
require_once './commons/env.php';
require_once './commons/function.php';

echo "<h1>üîç Ki·ªÉm tra l·ªói ch√≠nh t·∫£</h1>";
echo "<style>
body { font-family: Arial, sans-serif; margin: 20px; }
.error { color: red; font-weight: bold; }
.warning { color: orange; font-weight: bold; }
.success { color: green; font-weight: bold; }
table { border-collapse: collapse; width: 100%; margin: 10px 0; }
th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
th { background-color: #f2f2f2; }
</style>";

// C√°c t·ª´ sai th∆∞·ªùng g·∫∑p
$commonMistakes = [
    'L∆∞·ªçng' => 'L∆∞·ª£ng',
    'l∆∞·ªçng' => 'l∆∞·ª£ng', 
    'S√¥' => 'S·ªë',
    's√¥' => 's·ªë',
    'Spham' => 'S·∫£n ph·∫©m',
    'spham' => 's·∫£n ph·∫©m',
    'G√≠a' => 'Gi√°',
    'g√≠a' => 'gi√°',
    'M∆∞a' => 'Mua',
    'm∆∞a' => 'mua',
    'H√†ng' => 'H√†ng', // ƒê√∫ng r·ªìi
    'h√†ng' => 'h√†ng', // ƒê√∫ng r·ªìi
    'Th√™m' => 'Th√™m', // ƒê√∫ng r·ªìi
    'th√™m' => 'th√™m', // ƒê√∫ng r·ªìi
];

echo "<h2>üî§ Ki·ªÉm tra c√°c t·ª´ sai th∆∞·ªùng g·∫∑p</h2>";

$errors = [];
$viewFiles = [
    'views/detailSanPham.php',
    'views/sanPhamTheoDanhMuc.php',
    'views/gioHang.php',
    'views/thanhToan.php',
    'admin/views/sanpham/detailSanPham.php',
    'admin/views/sanpham/addSanPham.php',
    'admin/views/sanpham/editSanPham.php'
];

foreach ($viewFiles as $file) {
    if (file_exists($file)) {
        $content = file_get_contents($file);
        echo "<h3>üìÑ Ki·ªÉm tra file: $file</h3>";
        
        $fileErrors = [];
        foreach ($commonMistakes as $wrong => $correct) {
            if (strpos($content, $wrong) !== false) {
                $fileErrors[] = "$wrong ‚Üí $correct";
                $errors[] = "$file: $wrong ‚Üí $correct";
            }
        }
        
        if (empty($fileErrors)) {
            echo "<p class='success'>‚úÖ Kh√¥ng t√¨m th·∫•y l·ªói ch√≠nh t·∫£ ph·ªï bi·∫øn</p>";
        } else {
            echo "<div class='error'>‚ùå T√¨m th·∫•y l·ªói:</div>";
            echo "<ul>";
            foreach ($fileErrors as $error) {
                echo "<li class='error'>$error</li>";
            }
            echo "</ul>";
        }
    } else {
        echo "<p class='warning'>‚ö†Ô∏è File $file kh√¥ng t·ªìn t·∫°i</p>";
    }
}

// Ki·ªÉm tra database content
echo "<h2>üóÑÔ∏è Ki·ªÉm tra n·ªôi dung database</h2>";

try {
    $conn = connectDB();
    
    // Ki·ªÉm tra t√™n s·∫£n ph·∫©m
    $stmt = $conn->query("SELECT id, ten_san_pham FROM san_phams LIMIT 10");
    $products = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<h3>üì¶ S·∫£n ph·∫©m trong database:</h3>";
    if (!empty($products)) {
        echo "<table>";
        echo "<tr><th>ID</th><th>T√™n s·∫£n ph·∫©m</th><th>Ki·ªÉm tra</th></tr>";
        
        foreach ($products as $product) {
            $hasError = false;
            $checkResult = "‚úÖ OK";
            
            foreach ($commonMistakes as $wrong => $correct) {
                if (strpos($product['ten_san_pham'], $wrong) !== false) {
                    $hasError = true;
                    $checkResult = "‚ùå C√≥ l·ªói: $wrong";
                    break;
                }
            }
            
            echo "<tr>";
            echo "<td>" . $product['id'] . "</td>";
            echo "<td>" . htmlspecialchars($product['ten_san_pham']) . "</td>";
            echo "<td class='" . ($hasError ? 'error' : 'success') . "'>$checkResult</td>";
            echo "</tr>";
        }
        echo "</table>";
    } else {
        echo "<p class='warning'>‚ö†Ô∏è Kh√¥ng c√≥ s·∫£n ph·∫©m trong database</p>";
    }
    
    // Ki·ªÉm tra danh m·ª•c
    $stmt = $conn->query("SELECT id, ten_danh_muc FROM danh_mucs LIMIT 10");
    $categories = $stmt->fetchAll(PDO::FETCH_ASSOC);
    
    echo "<h3>üìÅ Danh m·ª•c trong database:</h3>";
    if (!empty($categories)) {
        echo "<table>";
        echo "<tr><th>ID</th><th>T√™n danh m·ª•c</th><th>Ki·ªÉm tra</th></tr>";
        
        foreach ($categories as $category) {
            $hasError = false;
            $checkResult = "‚úÖ OK";
            
            foreach ($commonMistakes as $wrong => $correct) {
                if (strpos($category['ten_danh_muc'], $wrong) !== false) {
                    $hasError = true;
                    $checkResult = "‚ùå C√≥ l·ªói: $wrong";
                    break;
                }
            }
            
            echo "<tr>";
            echo "<td>" . $category['id'] . "</td>";
            echo "<td>" . htmlspecialchars($category['ten_danh_muc']) . "</td>";
            echo "<td class='" . ($hasError ? 'error' : 'success') . "'>$checkResult</td>";
            echo "</tr>";
        }
        echo "</table>";
    }
    
} catch (Exception $e) {
    echo "<p class='error'>‚ùå L·ªói k·∫øt n·ªëi database: " . $e->getMessage() . "</p>";
}

echo "<h2>üìù T√≥m t·∫Øt</h2>";
if (empty($errors)) {
    echo "<p class='success'>‚úÖ Kh√¥ng t√¨m th·∫•y l·ªói ch√≠nh t·∫£ trong c√°c file ki·ªÉm tra</p>";
} else {
    echo "<p class='error'>‚ùå T√¨m th·∫•y " . count($errors) . " l·ªói ch√≠nh t·∫£:</p>";
    echo "<ul>";
    foreach ($errors as $error) {
        echo "<li class='error'>$error</li>";
    }
    echo "</ul>";
}

echo "<h2>üõ†Ô∏è C√°ch s·ª≠a l·ªói</h2>";
echo "<p>N·∫øu b·∫°n th·∫•y l·ªói ch√≠nh t·∫£ trong giao di·ªán nh∆∞ng kh√¥ng t√¨m th·∫•y trong code, c√≥ th·ªÉ:</p>";
echo "<ul>";
echo "<li>‚úèÔ∏è L·ªói ƒë·∫øn t·ª´ d·ªØ li·ªáu trong database</li>";
echo "<li>üé® L·ªói do CSS ho·∫∑c JavaScript t·∫°o ra</li>";
echo "<li>üì± L·ªói ch·ªâ xu·∫•t hi·ªán tr√™n mobile/responsive</li>";
echo "<li>üåê L·ªói trong file template kh√°c</li>";
echo "</ul>";
echo "<p><strong>H√†nh ƒë·ªông:</strong> H√£y ch·ª•p m√†n h√¨nh v·ªã tr√≠ ch√≠nh x√°c c·ªßa l·ªói ƒë·ªÉ t√¥i c√≥ th·ªÉ t√¨m v√† s·ª≠a!</p>";
?>
