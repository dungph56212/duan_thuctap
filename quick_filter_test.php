<?php
session_start();

// Include required files
require_once './commons/env.php';
require_once './commons/function.php';

// Check if we can connect to database
try {
    $conn = connectDB();
    echo "<div style='color: green; font-weight: bold;'>‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng!</div>";
} catch (Exception $e) {
    echo "<div style='color: red; font-weight: bold;'>‚ùå L·ªói k·∫øt n·ªëi database: " . $e->getMessage() . "</div>";
    exit;
}

?>
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test H·ªá Th·ªëng L·ªçc S·∫£n Ph·∫©m</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
    <style>
        body { 
            font-family: Arial, sans-serif; 
            background: #f5f5f5; 
            padding: 20px; 
        }
        .container { 
            max-width: 1200px; 
            background: white; 
            padding: 30px; 
            border-radius: 10px; 
            box-shadow: 0 4px 6px rgba(0,0,0,0.1); 
        }
        .test-section { 
            margin-bottom: 30px; 
            padding: 20px; 
            border: 1px solid #ddd; 
            border-radius: 8px; 
        }
        .success { color: #28a745; font-weight: bold; }
        .error { color: #dc3545; font-weight: bold; }
        .info { color: #007bff; font-weight: bold; }
        .test-link {
            display: inline-block;
            margin: 5px;
            padding: 10px 20px;
            background: #007bff;
            color: white;
            text-decoration: none;
            border-radius: 5px;
            transition: background 0.3s;
        }
        .test-link:hover {
            background: #0056b3;
            color: white;
            text-decoration: none;
        }
        .demo-product {
            border: 1px solid #ddd;
            padding: 15px;
            margin: 10px 0;
            border-radius: 5px;
            background: #f8f9fa;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1 class="text-center mb-4">üîç Test H·ªá Th·ªëng L·ªçc S·∫£n Ph·∫©m</h1>
        
        <!-- Test Database Connection -->
        <div class="test-section">
            <h3>1. Test K·∫øt N·ªëi Database</h3>
            <?php
            try {
                // Test basic query
                $stmt = $conn->prepare("SELECT COUNT(*) as total FROM san_phams");
                $stmt->execute();
                $result = $stmt->fetch();
                echo "<div class='success'>‚úÖ Database c√≥ {$result['total']} s·∫£n ph·∫©m</div>";
                
                // Test danh muc table
                $stmt = $conn->prepare("SELECT COUNT(*) as total FROM danh_mucs");
                $stmt->execute();
                $result = $stmt->fetch();
                echo "<div class='success'>‚úÖ Database c√≥ {$result['total']} danh m·ª•c</div>";
                
            } catch (Exception $e) {
                echo "<div class='error'>‚ùå L·ªói truy v·∫•n: " . $e->getMessage() . "</div>";
            }
            ?>
        </div>

        <!-- Test Model Methods -->
        <div class="test-section">
            <h3>2. Test C√°c Method L·ªçc M·ªõi</h3>
            <?php
            try {
                require_once './models/SanPham.php';
                $sanPhamModel = new SanPham();
                
                // Test getAllProductWithFilters
                $testFilters = ['search' => 's√°ch', 'sort' => 'price-low'];
                $products = $sanPhamModel->getAllProductWithFilters($testFilters);
                echo "<div class='success'>‚úÖ getAllProductWithFilters: " . count($products) . " s·∫£n ph·∫©m</div>";
                
                // Test getUniqueAuthors
                $authors = $sanPhamModel->getUniqueAuthors();
                echo "<div class='success'>‚úÖ getUniqueAuthors: " . count($authors) . " t√°c gi·∫£</div>";
                
                // Test getPriceRange
                $priceRange = $sanPhamModel->getPriceRange();
                echo "<div class='success'>‚úÖ getPriceRange: " . 
                     number_format($priceRange['min_price']) . " - " . 
                     number_format($priceRange['max_price']) . " VND</div>";
                
            } catch (Exception $e) {
                echo "<div class='error'>‚ùå L·ªói test model: " . $e->getMessage() . "</div>";
            }
            ?>
        </div>

        <!-- Test Sample Data -->
        <div class="test-section">
            <h3>3. D·ªØ Li·ªáu M·∫´u</h3>
            <?php
            try {
                $stmt = $conn->prepare("SELECT san_phams.*, danh_mucs.ten_danh_muc 
                                      FROM san_phams 
                                      INNER JOIN danh_mucs ON san_phams.danh_muc_id = danh_mucs.id 
                                      LIMIT 3");
                $stmt->execute();
                $sampleProducts = $stmt->fetchAll();
                
                foreach($sampleProducts as $product) {
                    echo "<div class='demo-product'>";
                    echo "<h5>{$product['ten_san_pham']}</h5>";
                    echo "<p><strong>Danh m·ª•c:</strong> {$product['ten_danh_muc']}</p>";
                    echo "<p><strong>Gi√°:</strong> " . number_format($product['gia_san_pham']) . " VND";
                    if ($product['gia_khuyen_mai']) {
                        echo " (Gi·∫£m: " . number_format($product['gia_khuyen_mai']) . " VND)";
                    }
                    echo "</p>";
                    if (!empty($product['tac_gia'])) {
                        echo "<p><strong>T√°c gi·∫£:</strong> {$product['tac_gia']}</p>";
                    }
                    echo "<p><strong>S·ªë l∆∞·ª£ng:</strong> {$product['so_luong']}</p>";
                    echo "</div>";
                }
                
            } catch (Exception $e) {
                echo "<div class='error'>‚ùå L·ªói l·∫•y d·ªØ li·ªáu m·∫´u: " . $e->getMessage() . "</div>";
            }
            ?>
        </div>

        <!-- Test Links -->
        <div class="test-section">
            <h3>4. Test Links Th·ª±c T·∫ø</h3>
            <div class="row">
                <div class="col-md-6">
                    <h5>Trang Ch√≠nh:</h5>
                    <a href="<?= BASE_URL ?>" class="test-link">üè† Trang Ch·ªß</a>
                    <a href="<?= BASE_URL ?>?act=san-pham-theo-danh-muc" class="test-link">üìö T·∫•t C·∫£ S·∫£n Ph·∫©m</a>
                    
                    <h5 class="mt-3">Test L·ªçc:</h5>
                    <a href="<?= BASE_URL ?>?act=san-pham-theo-danh-muc&search=s√°ch" class="test-link">üîç T√¨m "s√°ch"</a>
                    <a href="<?= BASE_URL ?>?act=san-pham-theo-danh-muc&sort=price-low" class="test-link">üí∞ Gi√° th·∫•p nh·∫•t</a>
                </div>
                <div class="col-md-6">
                    <h5>Test N√¢ng Cao:</h5>
                    <a href="<?= BASE_URL ?>?act=san-pham-theo-danh-muc&min_price=100000&max_price=500000" class="test-link">üíµ 100k-500k</a>
                    <a href="<?= BASE_URL ?>?act=san-pham-theo-danh-muc&status=sale" class="test-link">üè∑Ô∏è ƒêang gi·∫£m gi√°</a>
                    <a href="<?= BASE_URL ?>?act=san-pham-theo-danh-muc&status=new&sort=newest" class="test-link">‚≠ê S·∫£n ph·∫©m m·ªõi</a>
                    
                    <h5 class="mt-3">K·∫øt H·ª£p:</h5>
                    <a href="<?= BASE_URL ?>?act=san-pham-theo-danh-muc&search=s√°ch&sort=price-low&status=available" class="test-link">üéØ T√¨m + L·ªçc</a>
                </div>
            </div>
        </div>

        <!-- Performance Test -->
        <div class="test-section">
            <h3>5. Test Hi·ªáu Su·∫•t</h3>
            <?php
            $startTime = microtime(true);
            
            // Run multiple queries
            for($i = 0; $i < 5; $i++) {
                $randomFilters = [
                    'sort' => ['default', 'price-low', 'price-high', 'name'][array_rand(['default', 'price-low', 'price-high', 'name'])],
                    'min_price' => rand(0, 100000),
                    'max_price' => rand(200000, 1000000)
                ];
                $products = $sanPhamModel->getAllProductWithFilters($randomFilters);
            }
            
            $endTime = microtime(true);
            $executionTime = ($endTime - $startTime) * 1000;
            
            echo "<div class='info'>‚ö° Th·ªùi gian 5 truy v·∫•n: " . number_format($executionTime, 2) . "ms</div>";
            echo "<div class='info'>üìä Trung b√¨nh: " . number_format($executionTime/5, 2) . "ms/truy v·∫•n</div>";
            
            if($executionTime/5 < 50) {
                echo "<div class='success'>üöÄ Performance: Tuy·ªát v·ªùi!</div>";
            } elseif($executionTime/5 < 100) {
                echo "<div class='info'>üëç Performance: T·ªët</div>";
            } else {
                echo "<div class='error'>‚ö†Ô∏è Performance: C·∫ßn t·ªëi ∆∞u</div>";
            }
            ?>
        </div>

        <!-- URL Test Examples -->
        <div class="test-section">
            <h3>6. V√≠ D·ª• URL Parameters</h3>
            <div class="alert alert-info">
                <h5>C√°c URL test b·∫°n c√≥ th·ªÉ copy v√†o thanh ƒë·ªãa ch·ªâ:</h5>
                <code><?= BASE_URL ?>?act=san-pham-theo-danh-muc&search=s√°ch&sort=price-low</code><br>
                <code><?= BASE_URL ?>?act=san-pham-theo-danh-muc&min_price=50000&max_price=200000</code><br>
                <code><?= BASE_URL ?>?act=san-pham-theo-danh-muc&status=sale&sort=newest</code><br>
                <code><?= BASE_URL ?>?act=san-pham-theo-danh-muc&danh_muc_id=1&status=available</code>
            </div>
        </div>

        <!-- Next Steps -->
        <div class="test-section bg-light">
            <h3>7. H∆∞·ªõng D·∫´n S·ª≠ D·ª•ng</h3>
            <ol>
                <li><strong>Truy c·∫≠p trang s·∫£n ph·∫©m:</strong> Click link "T·∫•t C·∫£ S·∫£n Ph·∫©m" ·ªü tr√™n</li>
                <li><strong>Test t√¨m ki·∫øm:</strong> Nh·∫≠p t·ª´ kh√≥a v√†o √¥ t√¨m ki·∫øm</li>
                <li><strong>Test l·ªçc gi√°:</strong> Nh·∫≠p kho·∫£ng gi√° ho·∫∑c click c√°c button c√≥ s·∫µn</li>
                <li><strong>Test s·∫Øp x·∫øp:</strong> Ch·ªçn c√°ch s·∫Øp x·∫øp t·ª´ dropdown</li>
                <li><strong>Test l·ªçc tr·∫°ng th√°i:</strong> Ch·ªçn lo·∫°i s·∫£n ph·∫©m mu·ªën xem</li>
                <li><strong>K·∫øt h·ª£p nhi·ªÅu b·ªô l·ªçc:</strong> S·ª≠ d·ª•ng ƒë·ªìng th·ªùi nhi·ªÅu b·ªô l·ªçc</li>
            </ol>
            
            <div class="mt-3">
                <strong>üéØ M·ª•c ti√™u ƒë√£ ƒë·∫°t ƒë∆∞·ª£c:</strong>
                <ul>
                    <li>‚úÖ H·ªá th·ªëng l·ªçc server-side v·ªõi PHP/MySQL</li>
                    <li>‚úÖ Giao di·ªán ng∆∞·ªùi d√πng th√¢n thi·ªán</li>
                    <li>‚úÖ Responsive design cho mobile</li>
                    <li>‚úÖ URL-friendly parameters</li>
                    <li>‚úÖ Performance t·ªëi ∆∞u</li>
                    <li>‚úÖ B·∫£o m·∫≠t input validation</li>
                </ul>
            </div>
        </div>

        <div class="text-center mt-4">
            <a href="<?= BASE_URL ?>?act=san-pham-theo-danh-muc" class="btn btn-primary btn-lg">
                üöÄ B·∫Øt ƒê·∫ßu Test H·ªá Th·ªëng L·ªçc
            </a>
        </div>
    </div>
</body>
</html>
